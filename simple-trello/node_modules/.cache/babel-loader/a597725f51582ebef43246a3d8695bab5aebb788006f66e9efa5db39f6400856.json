{"ast":null,"code":"var _jsxFileName = \"/home/ror0/Documents/PP/Project-dump/simple-trello/src/components/Board.tsx\",\n  _s = $RefreshSig$();\nimport { useMemo, useState } from 'react';\nimport PlusIcon from '../icons/PlusIcon';\nimport ColumnContainer from './ColumnContainer';\nimport { DndContext } from '@dnd-kit/core';\nimport { SortableContext } from '@dnd-kit/sortable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board() {\n  _s();\n  const [columns, setColumns] = useState([]);\n  const columnsId = useMemo(() => columns.map(col => col.id), [columns]);\n  const createNewColumn = () => {\n    const columnToAdd = {\n      id: generateId(),\n      title: `Column ${columns.length + 1}`\n    };\n    setColumns([...columns, columnToAdd]);\n  };\n  function generateId() {\n    return Math.floor(Math.random() * 10001);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"m-auto flex min-h-screen w-full items-center overflow-x-auto overflow-y-hidden\",\n    children: /*#__PURE__*/_jsxDEV(DndContext, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-auto flex gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-4\",\n          children: /*#__PURE__*/_jsxDEV(SortableContext, {\n            items: columnsId,\n            children: columns.map(col => {\n              return /*#__PURE__*/_jsxDEV(ColumnContainer, {\n                column: col,\n                deleteColumn: deleteColumn\n              }, col.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createNewColumn,\n          className: \"h-[60px] w-[350px] min-w-[350px] cursor-pointer rounded-lg bg-black border-2 border-gray p-4 ring-rose-500 hover:ring-2 flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(PlusIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), \" Add Column\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n  function deleteColumn(id) {\n    const filteredColumn = columns.filter(col => col.id !== id);\n    setColumns(filteredColumn);\n  }\n}\n_s(Board, \"RVuvq+BDugHTDLpXMgJatUx3VPU=\");\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useMemo","useState","PlusIcon","ColumnContainer","DndContext","SortableContext","jsxDEV","_jsxDEV","Board","_s","columns","setColumns","columnsId","map","col","id","createNewColumn","columnToAdd","generateId","title","length","Math","floor","random","className","children","items","column","deleteColumn","fileName","_jsxFileName","lineNumber","columnNumber","onClick","filteredColumn","filter","_c","$RefreshReg$"],"sources":["/home/ror0/Documents/PP/Project-dump/simple-trello/src/components/Board.tsx"],"sourcesContent":["import { useMemo, useState } from 'react';\nimport PlusIcon from '../icons/PlusIcon';\nimport {Column, Id} from '../types';\nimport ColumnContainer from './ColumnContainer';\nimport { DndContext } from '@dnd-kit/core';\nimport { SortableContext } from '@dnd-kit/sortable';\n\nexport default function Board() {\n    const [columns, setColumns] = useState<Column[]>([]);\n    const columnsId = useMemo(() => columns.map(col => col.id), [columns]);\n    \n\n    const createNewColumn = () => {\n        const columnToAdd:Column = {\n            id: generateId(),\n            title: `Column ${columns.length + 1}`,\n        };\n    \n        setColumns([...columns, columnToAdd]);\n    }\n\n    function generateId() {\n        return Math.floor(Math.random() * 10001);\n    }\n\n    return(\n        <div className=\"m-auto flex min-h-screen w-full items-center overflow-x-auto overflow-y-hidden\">\n            <DndContext>\n                <div className=\"m-auto flex gap-4\">\n                    <div className='flex gap-4'>\n                        <SortableContext items={columnsId}>\n                            {\n                                columns.map(col => {\n                                    return(\n                                        <ColumnContainer\n                                            key={col.id}\n                                            column={col}\n                                            deleteColumn={deleteColumn}\n                                        />\n                                    )\n                                })\n                            }\n                        </SortableContext>\n                    </div>\n                    <button\n                        onClick={createNewColumn}\n                        className=\"h-[60px] w-[350px] min-w-[350px] cursor-pointer rounded-lg bg-black border-2 border-gray p-4 ring-rose-500 hover:ring-2 flex gap-2\"\n                    >\n                        <PlusIcon/> Add Column\n                    </button>\n                </div>\n            </DndContext>\n        </div>\n    )\n\n    function deleteColumn(id: Id) {\n        const filteredColumn = columns.filter( col => col.id !== id);\n        setColumns(filteredColumn);\n    }\n\n}"],"mappings":";;AAAA,SAASA,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACzC,OAAOC,QAAQ,MAAM,mBAAmB;AAExC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,eAAe,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAW,EAAE,CAAC;EACpD,MAAMW,SAAS,GAAGZ,OAAO,CAAC,MAAMU,OAAO,CAACG,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;EAGtE,MAAMM,eAAe,GAAGA,CAAA,KAAM;IAC1B,MAAMC,WAAkB,GAAG;MACvBF,EAAE,EAAEG,UAAU,CAAC,CAAC;MAChBC,KAAK,EAAG,UAAST,OAAO,CAACU,MAAM,GAAG,CAAE;IACxC,CAAC;IAEDT,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEO,WAAW,CAAC,CAAC;EACzC,CAAC;EAED,SAASC,UAAUA,CAAA,EAAG;IAClB,OAAOG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC;EAC5C;EAEA,oBACIhB,OAAA;IAAKiB,SAAS,EAAC,gFAAgF;IAAAC,QAAA,eAC3FlB,OAAA,CAACH,UAAU;MAAAqB,QAAA,eACPlB,OAAA;QAAKiB,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAC9BlB,OAAA;UAAKiB,SAAS,EAAC,YAAY;UAAAC,QAAA,eACvBlB,OAAA,CAACF,eAAe;YAACqB,KAAK,EAAEd,SAAU;YAAAa,QAAA,EAE1Bf,OAAO,CAACG,GAAG,CAACC,GAAG,IAAI;cACf,oBACIP,OAAA,CAACJ,eAAe;gBAEZwB,MAAM,EAAEb,GAAI;gBACZc,YAAY,EAAEA;cAAa,GAFtBd,GAAG,CAACC,EAAE;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAGd,CAAC;YAEV,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eACNzB,OAAA;UACI0B,OAAO,EAAEjB,eAAgB;UACzBQ,SAAS,EAAC,oIAAoI;UAAAC,QAAA,gBAE9IlB,OAAA,CAACL,QAAQ;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eACf;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;EAGV,SAASJ,YAAYA,CAACb,EAAM,EAAE;IAC1B,MAAMmB,cAAc,GAAGxB,OAAO,CAACyB,MAAM,CAAErB,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKA,EAAE,CAAC;IAC5DJ,UAAU,CAACuB,cAAc,CAAC;EAC9B;AAEJ;AAACzB,EAAA,CArDuBD,KAAK;AAAA4B,EAAA,GAAL5B,KAAK;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}