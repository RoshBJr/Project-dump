{"ast":null,"code":"var _jsxFileName = \"/home/ror0/Documents/PP/Project-dump/simple-trello/src/components/Board.tsx\",\n  _s = $RefreshSig$();\nimport { useMemo, useState } from 'react';\nimport PlusIcon from '../icons/PlusIcon';\nimport ColumnContainer from './ColumnContainer';\nimport { DndContext, DragOverlay, PointerSensor, useSensor, useSensors } from '@dnd-kit/core';\nimport { SortableContext, arrayMove } from '@dnd-kit/sortable';\nimport { createPortal } from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const columnsId = useMemo(() => columns.map(col => col.id), [columns]);\n  const [activeCol, setActiveCol] = useState(null);\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 3 // have to drag for 3px to activate drag event\n    }\n  }));\n  function createTask(columnId) {\n    const newTask = {\n      id: generateId(),\n      columnId,\n      content: `Task ${tasks.length + 1}`\n    };\n  }\n  const createNewColumn = () => {\n    const columnToAdd = {\n      id: generateId(),\n      title: `Column ${columns.length + 1}`\n    };\n    setColumns([...columns, columnToAdd]);\n  };\n  function generateId() {\n    return Math.floor(Math.random() * 10001);\n  }\n  function updateColumn(id, title) {\n    const newColumns = columns.map(col => {\n      if (col.id !== id) return col;\n      return {\n        ...col,\n        title\n      };\n    });\n    setColumns(newColumns);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"m-auto flex min-h-screen w-full items-center overflow-x-auto overflow-y-hidden\",\n    children: /*#__PURE__*/_jsxDEV(DndContext, {\n      sensors: sensors,\n      onDragStart: onDragStart,\n      onDragEnd: onDragEnd,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-auto flex gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-4\",\n          children: /*#__PURE__*/_jsxDEV(SortableContext, {\n            items: columnsId,\n            children: columns.map(col => {\n              return /*#__PURE__*/_jsxDEV(ColumnContainer, {\n                createTask: createTask,\n                updateColumn: updateColumn,\n                column: col,\n                deleteColumn: deleteColumn\n              }, col.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createNewColumn,\n          className: \"h-[60px] w-[350px] min-w-[350px] cursor-pointer rounded-lg bg-black border-2 border-gray p-4 ring-rose-500 hover:ring-2 flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(PlusIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), \" Add Column\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(DragOverlay, {\n        children: activeCol && /*#__PURE__*/_jsxDEV(ColumnContainer, {\n          createTask: createTask,\n          updateColumn: updateColumn,\n          column: activeCol,\n          deleteColumn: deleteColumn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }, this), document.body)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n  function deleteColumn(id) {\n    const filteredColumn = columns.filter(col => col.id !== id);\n    setColumns(filteredColumn);\n  }\n  function onDragStart(event) {\n    var _event$active$data$cu;\n    console.log(\"DRAG START\", event);\n    if (((_event$active$data$cu = event.active.data.current) === null || _event$active$data$cu === void 0 ? void 0 : _event$active$data$cu.type) === \"Column\") {\n      return setActiveCol(event.active.data.current.column);\n    }\n  }\n  function onDragEnd(event) {\n    const {\n      active,\n      over\n    } = event;\n    if (!over) return;\n    const activColId = active.id;\n    const overColumnId = over.id;\n    if (activColId === overColumnId) return;\n    setColumns(columns => {\n      const activeColIndex = columns.findIndex(col => col.id === activColId);\n      const overColIndex = columns.findIndex(col => col.id === overColumnId);\n      return arrayMove(columns, activeColIndex, overColIndex);\n    });\n  }\n}\n_s(Board, \"ai6QPPaiPZi07aveEhlXNMAtE1g=\", false, function () {\n  return [useSensors, useSensor];\n});\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useMemo","useState","PlusIcon","ColumnContainer","DndContext","DragOverlay","PointerSensor","useSensor","useSensors","SortableContext","arrayMove","createPortal","jsxDEV","_jsxDEV","Board","_s","tasks","setTasks","columns","setColumns","columnsId","map","col","id","activeCol","setActiveCol","sensors","activationConstraint","distance","createTask","columnId","newTask","generateId","content","length","createNewColumn","columnToAdd","title","Math","floor","random","updateColumn","newColumns","className","children","onDragStart","onDragEnd","items","column","deleteColumn","fileName","_jsxFileName","lineNumber","columnNumber","onClick","document","body","filteredColumn","filter","event","_event$active$data$cu","console","log","active","data","current","type","over","activColId","overColumnId","activeColIndex","findIndex","overColIndex","_c","$RefreshReg$"],"sources":["/home/ror0/Documents/PP/Project-dump/simple-trello/src/components/Board.tsx"],"sourcesContent":["import { useMemo, useState } from 'react';\nimport PlusIcon from '../icons/PlusIcon';\nimport {Column, Id, Task} from '../types';\nimport ColumnContainer from './ColumnContainer';\nimport { DndContext, DragEndEvent, DragOverlay, DragStartEvent, PointerSensor, useSensor, useSensors } from '@dnd-kit/core';\nimport { SortableContext, arrayMove } from '@dnd-kit/sortable';\nimport { createPortal } from 'react-dom';\n\nexport default function Board() {\n    const [tasks, setTasks] = useState<Task[]>([]);\n    const [columns, setColumns] = useState<Column[]>([]);\n    const columnsId = useMemo(() => columns.map(col => col.id), [columns]);\n    const [activeCol, setActiveCol] = useState<Column|null>(null);\n    const sensors = useSensors(\n            useSensor(PointerSensor, {\n                activationConstraint: {\n                    distance: 3, // have to drag for 3px to activate drag event\n                }\n            })\n        );\n    \n    function createTask(columnId: Id) {\n        const newTask: Task = {\n            id: generateId(),\n            columnId,\n            content: `Task ${tasks.length + 1}`,\n        }\n    }\n    \n    const createNewColumn = () => {\n        const columnToAdd:Column = {\n            id: generateId(),\n            title: `Column ${columns.length + 1}`,\n        };\n    \n        setColumns([...columns, columnToAdd]);\n    }\n\n    function generateId() {\n        return Math.floor(Math.random() * 10001);\n    }\n\n    function updateColumn(id: Id, title: string) {\n        const newColumns = columns.map( col => {\n            if(col.id !== id) return col;\n            return {...col, title};\n        });\n        setColumns(newColumns);\n    }\n\n    return(\n        <div className=\"m-auto flex min-h-screen w-full items-center overflow-x-auto overflow-y-hidden\">\n            <DndContext\n                sensors={sensors}\n                onDragStart={onDragStart}\n                onDragEnd={onDragEnd}\n            >\n                <div className=\"m-auto flex gap-4\">\n                    <div className='flex gap-4'>\n                        <SortableContext items={columnsId}>\n                            {\n                                columns.map(col => {\n                                    return(\n                                        <ColumnContainer\n                                            key={col.id}\n                                            createTask={createTask}\n                                            updateColumn={updateColumn}\n                                            column={col}\n                                            deleteColumn={deleteColumn}\n                                        />\n                                    )\n                                })\n                            }\n                        </SortableContext>\n                    </div>\n                    <button\n                        onClick={createNewColumn}\n                        className=\"h-[60px] w-[350px] min-w-[350px] cursor-pointer rounded-lg bg-black border-2 border-gray p-4 ring-rose-500 hover:ring-2 flex gap-2\"\n                    >\n                        <PlusIcon/> Add Column\n                    </button>\n                </div>\n                {\n                    createPortal(\n                        <DragOverlay>\n                            {\n                                activeCol &&\n                                <ColumnContainer\n                                    createTask={createTask}\n                                    updateColumn={updateColumn}\n                                    column={activeCol}\n                                    deleteColumn={deleteColumn} \n                                />\n                            }\n                        </DragOverlay>,\n                        document.body\n                    )\n                }\n            </DndContext>\n        </div>\n    )\n\n    function deleteColumn(id: Id) {\n        const filteredColumn = columns.filter( col => col.id !== id);\n        setColumns(filteredColumn);\n    }\n\n    function onDragStart(event: DragStartEvent) {\n        console.log(\"DRAG START\", event);\n        if(event.active.data.current?.type === \"Column\" ) {\n            return setActiveCol(event.active.data.current.column);\n        }\n    }\n\n    function onDragEnd(event: DragEndEvent) {\n        const {active, over} = event;\n\n        if(!over) return;\n        const activColId = active.id;\n        const overColumnId = over.id;\n        if(activColId === overColumnId) return;\n        setColumns(\n            columns => {\n                const activeColIndex = \n                    columns.findIndex(col => col.id === activColId);\n                const overColIndex =\n                    columns.findIndex(col => col.id === overColumnId);\n                return arrayMove(columns, activeColIndex, overColIndex);\n            }\n        );\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}